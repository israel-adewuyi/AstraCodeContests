# import httpx
# from openai import OpenAI

# client = OpenAI(
#     base_url="https://406b9a0c3301.innodatahub.innopolis.university/proxy/6379/v1", 
#     api_key="token-abc123",
#     http_client=httpx.Client(verify=False)
# )

# completion = client.chat.completions.create(
#     model="Qwen/Qwen3-1.7B",
#     messages=[
#         {"role": "user", "content": "Hello!"}
#     ]
# )

# print(completion.choices[0].message)

import httpx
from openai import OpenAI

client = OpenAI(
    base_url="https://406b9a0c3301.innodatahub.innopolis.university/proxy/6379/v1", 
    api_key="token-abc123",
    http_client=httpx.Client(verify=False)
)

sys_prompt = """You are a helpful assistant. 
You are presented with a competitive programming input format. 
Your task is to generate a single input that aligns with the format of the problem."""

prompt = r""" Problem statement: "Iroha has a sequence of positive integers A = (A_1, A_2, \dots, A_N) of length N (N \ge 1). She generated a string S using A as follows:

Start with S = |. For i = 1, 2, \dots, N, perform the following operations in order: Append A_i copies of - to the end of S. Then, append one | to the end of S.

Append A_i copies of - to the end of S. Then, append one | to the end of S.

Given the generated string S, reconstruct the sequence A."

Input format: "S is a string of length between 3 and 100, inclusive, generated by the method in the problem statement.
A is a sequence of positive integers of length at least 1.```
S
```"
"""

completion = client.chat.completions.create(
    model="Qwen/Qwen3-1.7B",
    messages=[
        {"role": "system", "content": sys_prompt},
        {"role": "user", "content": prompt}
        ]
)

print(completion.choices[0].message)